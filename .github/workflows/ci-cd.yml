name: Build and deliver containers

on: 
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

jobs:
  match-service:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver match-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'maven'

      - name: Build, test and package project
        run: mvn package
        working-directory: ./match-service

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker build and push
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/match-service:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/match-service:latest
        working-directory: ./match-service

  player-service:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver player-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'maven'

      - name: Build, test and package project
        run: mvn package
        working-directory: ./player-service

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker build and push
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/player-service:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/player-service:latest
        working-directory: ./player-service

  team-service:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver team-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'maven'

      - name: Build, test and package project
        run: mvn package
        working-directory: ./team-service

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker build and push
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/team-service:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/team-service:latest
        working-directory: ./team-service
  
  api-gateway:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver api-gateway container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'maven'

      - name: Build, test, and package project
        run: mvn package
        working-directory: ./api-gateway

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker build and push
        run: |
          docker build --build-arg GOOGLE_CLIENTID=${{ secrets.GOOGLE_CLIENTID }} --build-arg GOOGLE_CLIENTSECRET=${{ secrets.GOOGLE_CLIENTSECRET }} -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
        working-directory: ./api-gateway
